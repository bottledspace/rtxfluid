#version 460
#extension GL_EXT_ray_tracing : enable

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba8) uniform image2D image;
layout(binding = 4, set = 0) uniform CameraProperties {
	mat4 mvp_inv;
} camera;

layout(location = 0) rayPayloadEXT struct {
	vec3 color;
	int count;
} payload;

vec3 rt(vec2 offset)
{
	const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + offset;
	const vec2 screenPos = 2.0*pixelCenter/vec2(gl_LaunchSizeEXT.xy) - 1.0;

	vec4 ndc = camera.mvp_inv*vec4(screenPos.x, screenPos.y, 0.0, 1.0);
	vec3 direction = normalize(ndc.xyz); // Perspective divide 
	vec3 origin = vec3(0.0,0.0,0.0);

	payload.count = 0;
    payload.color = vec3(0.0);
    traceRayEXT(topLevelAS, 0, 0xff, 0, 0, 0, origin, 0.1, direction, 3.0, 0);
	return payload.color;
}

void main() 
{
	vec3 color = rt(vec2(0.5,0.5));
	//(rt(vec2(0.25,0.25)) + rt(vec2(0.75,0.25)) + rt(vec2(0.75,0.25)) + rt(vec2(0.75,0.75))) / 4.0;
	
	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(color, 0.0));
}